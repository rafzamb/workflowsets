% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wfs_evaluate.R
\name{wfs_evaluate}
\alias{wfs_evaluate}
\title{Model evaluation of a workflow set}
\usage{
wfs_evaluate(.best_wfs, metrics_cv_test = TRUE, fit_models = TRUE)
}
\arguments{
\item{.best_wfs}{a tibble that corresponds to the output of the
\code{get_best_wf()} function.}

\item{metrics_cv_test}{A logical to get the evaluation metrics on the train
and test partitions, it defaults to TRUE.}

\item{fit_models}{A logical to obtain the trained workflows on the train
partition, by default it is TRUE.}
}
\value{
A list with two elements, the first is named as "metrics_cv_test"
and stores "n" tibbles, according to the "top n" requested workflows, where
the evaluation metrics are shown in the train and test partitions.

The second element is named "fit_models" and stores the "top n" requested
workflows trained on the train partition.
}
\description{
\code{wfs_evaluate()} takes as input a tibble that corresponds to the output of
the \code{get_best_wf()} function, it allows to extract the trained workflows
and the performance metrics in the train and test partitions.
}
\details{
Depending on the way the object that enters the parameter ".best_wfs" was
generated, the outputs of this function can be obtained. If the input of
“.best_wfs” does not have the evaluation metrics in train and test, the
element “metrics_cv_test” will not be generated. If the input of “.best_wfs”
does not have the workflows trained, the element "fit_models" cannot be
generated.
}
\examples{
#library(workflowsets)

# Slightly smaller data size
data(Chicago, package = "modeldata")
Chicago <- Chicago[1:1195,]

time_val_split <-
   rsample::sliding_period(
      Chicago,
      date,
      "month",
      lookback = 38,
      assess_stop = 1
   )

chi_features_res
chi_features_res \%>\% rank_results(select_best = TRUE)

best_wf <- get_best_wf(.wfs = chi_features_res,
                       .model = "top 1",
                       .rank_metric = "rsq",
                       .split = time_val_split)

best_wf

wfs_evaluate(best_wf)
}
